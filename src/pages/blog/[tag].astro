---
import { readAll } from "../../lib/markdoc/read";
import { blog } from "../../lib/markdoc/frontmatter.schema";
import TagCloud from "../../components/TagCloud.astro";
import PageLayout from "../../layouts/PageLayout.astro";
import PageMeta from "../../components/PageMeta.astro";
import { SITE_TITLE } from "../../config";

export async function getStaticPaths() {
  const posts = await readAll({
    directory: "blog",
    frontmatterSchema: blog,
  });

  const tags = Array.from(
    new Set(
      posts.reduce<string[]>(
        (allTags, post) => allTags.concat(post.frontmatter.tag),
        []
      )
    )
  );
  
  return tags.map((tag) => {
    return { params: { tag } };
  });
}

const { tag } = Astro.params;

const posts = await readAll({
  directory: "blog",
  frontmatterSchema: blog,
});

const filteredPosts = posts
  .filter((post) => post.frontmatter.tag.includes(tag) && post.frontmatter.draft !== true)
  .map((post) => ({
    title: post.frontmatter.title,
    tag: post.frontmatter.tag,
    date: new Date(post.frontmatter.date).toLocaleDateString("ko-KR", {
      year: "numeric",
      month: "short",
      day: "numeric",
    }),
    slug: post.slug,
    external: post.frontmatter.external,
    draft: post.frontmatter.draft,
}));

const tagcount = filteredPosts.length;
---

<PageLayout>
  <PageMeta title={`Blog | ${SITE_TITLE}`} slot="meta" />
  <section slot="main">
    <TagCloud posts={posts} />
    <div style="margin-top: 5px; margin-bottom: 25px; text-align: right; font-size: 13px; color: gray;">
      Total {tagcount} { tagcount > 1 ? "posts" : "post" }
    </div>
    <ul class="tag-post-list">
      {
      filteredPosts && filteredPosts.map((post) => (
        <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
          <div class="title">
            <a href={`/blog/${post.slug}`} class="unset hover:text-text-link">
              {post.title}
            </a>
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={post.date}>
              {post.date}
            </time>
          </div>
          <div>
            {post.tag.map(tag => (
              <div class="tag-item">
                <a href={`/blog/${tag}`}>
                  {tag === Astro.params.tag ? (
                    <div class="tag-selected">
                      {tag}
                    </div>
                  ) : (
                    <div class="tag-badge">
                      {tag}
                    </div>
                  )}
                </a>
              </div>
            ))}
          </div>
        </li>
      ))}
    </ul>
  </section>
</PageLayout>
